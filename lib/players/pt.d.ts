export default function Protracker(): void;
export default class Protracker {
    onNextRow: () => void;
    playing: boolean;
    paused: boolean;
    repeat: boolean;
    filter: boolean;
    mixval: number;
    syncqueue: any[];
    samplerate: number;
    baseperiodtable: Float32Array;
    finetunetable: Float32Array;
    vibratotable: any[];
    effects_t0: ((mod: any, ch: any) => void)[];
    effects_t0_e: ((mod: any, ch: any) => void)[];
    effects_t1: ((mod: any, ch: any) => void)[];
    effects_t1_e: ((mod: any, ch: any) => void)[];
    clearsong(): void;
    title: any;
    signature: string | undefined;
    songlen: any;
    repeatpos: any;
    patterntable: ArrayBuffer | undefined;
    channels: number | undefined;
    sample: any[] | undefined;
    samples: number | undefined;
    patterns: any;
    pattern: any[] | undefined;
    note: any[] | undefined;
    pattern_unpack: any[] | undefined;
    looprow: number | undefined;
    loopstart: number | undefined;
    loopcount: number | undefined;
    patterndelay: number | undefined;
    patternwait: number | undefined;
    initialize(): void;
    tick: number | undefined;
    position: number | undefined;
    row: number | undefined;
    offset: number | undefined;
    flags: number | undefined;
    speed: number | undefined;
    bpm: number | undefined;
    breakrow: number | undefined;
    patternjump: number | undefined;
    endofsong: boolean | undefined;
    channel: any[] | undefined;
    parse(buffer: any): boolean;
    chvu: any[] | Float32Array | undefined;
    advance(mod: any): void;
    mix(mod: any, bufs: any, buflen: any): void;
    effect_t0_0(mod: any, ch: any): void;
    effect_t0_1(mod: any, ch: any): void;
    effect_t0_2(mod: any, ch: any): void;
    effect_t0_3(mod: any, ch: any): void;
    effect_t0_4(mod: any, ch: any): void;
    effect_t0_5(mod: any, ch: any): void;
    effect_t0_6(mod: any, ch: any): void;
    effect_t0_7(mod: any, ch: any): void;
    effect_t0_8(mod: any, ch: any): void;
    effect_t0_9(mod: any, ch: any): void;
    effect_t0_a(mod: any, ch: any): void;
    effect_t0_b(mod: any, ch: any): void;
    effect_t0_c(mod: any, ch: any): void;
    effect_t0_d(mod: any, ch: any): void;
    effect_t0_e(mod: any, ch: any): void;
    effect_t0_f(mod: any, ch: any): void;
    effect_t0_e0(mod: any, ch: any): void;
    effect_t0_e1(mod: any, ch: any): void;
    effect_t0_e2(mod: any, ch: any): void;
    effect_t0_e3(mod: any, ch: any): void;
    effect_t0_e4(mod: any, ch: any): void;
    effect_t0_e5(mod: any, ch: any): void;
    effect_t0_e6(mod: any, ch: any): void;
    effect_t0_e7(mod: any, ch: any): void;
    effect_t0_e8(mod: any, ch: any): void;
    effect_t0_e9(mod: any, ch: any): void;
    effect_t0_ea(mod: any, ch: any): void;
    effect_t0_eb(mod: any, ch: any): void;
    effect_t0_ec(mod: any, ch: any): void;
    effect_t0_ed(mod: any, ch: any): void;
    effect_t0_ee(mod: any, ch: any): void;
    effect_t0_ef(mod: any, ch: any): void;
    effect_t1_0(mod: any, ch: any): void;
    effect_t1_1(mod: any, ch: any): void;
    effect_t1_2(mod: any, ch: any): void;
    effect_t1_3(mod: any, ch: any): void;
    effect_t1_4(mod: any, ch: any): void;
    effect_t1_5(mod: any, ch: any): void;
    effect_t1_6(mod: any, ch: any): void;
    effect_t1_7(mod: any, ch: any): void;
    effect_t1_8(mod: any, ch: any): void;
    effect_t1_9(mod: any, ch: any): void;
    effect_t1_a(mod: any, ch: any): void;
    effect_t1_b(mod: any, ch: any): void;
    effect_t1_c(mod: any, ch: any): void;
    effect_t1_d(mod: any, ch: any): void;
    effect_t1_e(mod: any, ch: any): void;
    effect_t1_f(mod: any, ch: any): void;
    effect_t1_e0(mod: any, ch: any): void;
    effect_t1_e1(mod: any, ch: any): void;
    effect_t1_e2(mod: any, ch: any): void;
    effect_t1_e3(mod: any, ch: any): void;
    effect_t1_e4(mod: any, ch: any): void;
    effect_t1_e5(mod: any, ch: any): void;
    effect_t1_e6(mod: any, ch: any): void;
    effect_t1_e7(mod: any, ch: any): void;
    effect_t1_e8(mod: any, ch: any): void;
    effect_t1_e9(mod: any, ch: any): void;
    effect_t1_ea(mod: any, ch: any): void;
    effect_t1_eb(mod: any, ch: any): void;
    effect_t1_ec(mod: any, ch: any): void;
    effect_t1_ed(mod: any, ch: any): void;
    effect_t1_ee(mod: any, ch: any): void;
    effect_t1_ef(mod: any, ch: any): void;
}
